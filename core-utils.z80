;   _TYPE       ( b u -- )
;               Display a string. Filter non-printing characters.
mCOLON  5,'_TYPE',UTYPE
    DW      TOR                     ;start count down loop
    DW      BRAN,UTYP2            ;skip first pass
UTYP1:          
    DW      DUPP,CAT,TCHAR,EMIT     ;display only printable
    DW      DOLIT,1,PLUS            ;increment address
UTYP2:          
    DW      DONXT,UTYP1             ;loop till done
    DW      DROP,EXIT

;   dm+         ( a u -- a )
;               Dump u bytes from , leaving a+u on the stack.
hCOLON  3,'dm+',DMP
    DW      OVER,DOLIT,4,UDOTR      ;display address
    DW      SPACE,TOR               ;start count down loop
    DW      BRAN,PDUM2              ;skip first pass
PDUM1:          
    DW      DUPP,CAT,DOLIT,3,UDOTR  ;display numeric data
    DW      DOLIT,1,PLUS            ;increment address
PDUM2:          
    DW      DONXT,PDUM1             ;loop till done
    DW      EXIT


;   DUMP        ( a u -- )
;               Dump u bytes from a, in a formatted manner.
mCOLON  4,'DUMP',DUMP
    DW      BASE,AT,TOR,HEX         ;save radix, set hex
    DW      DOLIT,16,SLASH          ;change count to lines
    DW      TOR                     ;start count down loop
DUMP1:          
    DW      CR,DOLIT,16,DDUP,DMP    ;display numeric
    DW      ROT,ROT
    DW      SPACE,SPACE,UTYPE       ;display printable characters
    DW      NUFQ,INVER              ;user control
    DW      QBRAN,DUMP2
    DW      DONXT,DUMP1             ;loop till done
    DW      BRAN,DUMP3
DUMP2:          
    DW      RFROM,DROP              ;cleanup loop stack, early exit
DUMP3:          
    DW      DROP,RFROM,BASE,STORE   ;reSTORE radix
    DW      EXIT

;   .S          ( ... -- ... )
;               Display the contents of the data stack.
mCOLON  2,'.S',DOTS
    DW      CR,DEPTH                ;stack depth
    DW      TOR                     ;start count down loop
    DW      BRAN,DOTS2              ;skip first pass
DOTS1:          
    DW      RAT,PICK,DOT            ;index stack, display contents
DOTS2:          
    DW      DONXT,DOTS1             ;loop till done
    mDSTR DOTQP,' <sp'
    DW      EXIT


;   !CSP        ( -- )
;               Save stack pointer in CSP for error checking.


;   ?CSP        ( -- )
;               Abort if stack pointer differs from that saved in CSP.


;   >NAME       ( ca -- na | F )
;               Convert code address to a name address.
    mCOLON  5,'>NAME',TNAME
    DW      CRRNT                   ;vocabulary link
TNAM1:          
    DW      CELLP,AT,QDUP           ;check all vocabularies
    DW      QBRAN,TNAM4
    DW      DDUP
TNAM2:          
    DW      AT,DUPP                 ;?last word in a vocabulary
    DW      QBRAN,TNAM3
    DW      DDUP,NAMET,XORR         ;compare
    DW      QBRAN,TNAM3
    DW      CELLM                   ;continue with next word
    DW      BRAN,TNAM2
TNAM3:          
    DW      SWAP,DROP,QDUP
    DW      QBRAN,TNAM1
    DW      SWAP,DROP,SWAP,DROP,EXIT
TNAM4:      
    DW      DROP,DOLIT,0,EXIT       ;false flag

;   .ID         ( na -- )
;               Display the name at address.
mCOLON  3,'.ID',DOTID
    DW      QDUP                    ;if zero no name
    DW      QBRAN,DOTI1
    DW      COUNT,DOLIT,MASKK,ANDD   ;mask lexicon bits
    DW      UTYPE,EXIT              ;display name string
DOTI1:          
    mDSTR   DOTQP,' {noName}'
    DW      EXIT


;   SEE         ( -- ; <string> )
;               A simple decompiler.
mCOLON  3,'SEE',SEE
    DW      TICK                    ;starting address
    DW      CR,CELLP
SEE1:           
    DW      CELLP,DUPP,AT,DUPP      ;?does it contain a zero
    DW      QBRAN,SEE2
    DW      TNAME                   ;?is it a name
SEE2:           
    DW      QDUP                    ;name address or zero
    DW      QBRAN,SEE3
    DW      SPACE,DOTID             ;display name
    DW      BRAN,SEE4
SEE3:           
    DW      DUPP,AT,UDOT            ;display number
SEE4:           
    DW      NUFQ                    ;user control
    DW      QBRAN,SEE1
    DW      DROP,EXIT


;   WORDS       ( -- )
;               Display the names in the context vocabulary.


;   COLD        ( -- )
;               The hilevel cold start sequence.




