;   '           ( -- ca )
;               Search context vocabularies for the next word in input stream.


;   ALLOT       ( n -- )
;               Allocate n bytes to the code dictionary.


;   ,           ( w -- )
;               Compile an integer into the code dictionary.
mCOLON  1,',',COMMA
    DW      HERE,DUPP,CELLP         ;cell boundary
    DW      CP,STORE,STORE,EXIT     ;adjust code pointer, compile


;   [COMPILE]   ( -- ; <string> )
;               Compile the next immediate word into code dictionary.
mCOLON  IMEDD+9,'[COMPILE]',BCOMP
    ; DW      TICK,COMMA,EXIT


;   COMPILE     ( -- )
;               Compile the next address in colon list to code dictionary.
mCOLON  COMPO+7,'COMPILE',COMPI
    DW      RFROM,DUPP,AT,COMMA     ;compile address
    DW      CELLP,TOR,EXIT          ;adjust return address


;   LITERAL     ( w -- )
;               Compile tos to code dictionary as an integer literal.


;   $,"         ( -- )
;               Compile a literal string up to next " .


;   RECURSE     ( -- )
;               Make the current word available for compilation.


;; Name compiler

;   ?UNIQUE     ( a -- a )
;               Display a warning message if the word already exists.


;   $,n         ( na -- )
;               Build a new dictionary name using the string at na.


;; FORTH compiler

;   $ COMPILE    ( a -- )
;               Compile next word to code dictionary as a token or literal.


;   OVERT       ( -- )
;               Link a new word into the current vocabulary.


;   ;           ( -- )
;               Terminate a colon definition.


;   ]           ( -- )
;               Start compiling the words in the input stream.


;   call,       ( ca -- )
;               Assemble a call instruction to ca.


;   :           ( -- ; <string> )
;               Start a new colon definition using next word as its name.


;   IMMEDIATE   ( -- )
;               Make the last compiled word an immediate word.


;; Defining words

;   USER        ( u -- ; <string> )
;               Compile a new user variable.


;   CREATE      ( -- ; <string> )
;               Compile a new array entry without allocating code space.


;   VARIABLE    ( -- ; <string> )
;               Compile a new variable initialized to 0.


