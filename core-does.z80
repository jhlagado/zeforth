;   doCONST	( -- x )
;	Run-time routine of CONSTANT and VARIABLE.
hCODE	COMPO+7, 'doCONST', DoCONST
    POP	HL	                        ;10t
    PUSH BC	                        ;11t
    LD C,(HL)	                    ; 7t
    INC	HL	                        ; 6t
    LD B,(HL)	                    ; 7t
    mNEXT


;   doLIST	( -- ) ( R: -- nest-sys )
;	Process colon list.
hCODE	COMPO+6, 'doLIST', DoLIST
    DEC IX	                        ;10t
    LD  (IX+0),D	                ;19t
    DEC IX	                        ;10t
    LD  (IX+0),E	                ;19t
    POP	HL	                        ;10t
    mNEXTHL							

;   DOLIT	( -- x )
;	Push an inline literal.
hCODE	COMPO+5, 'DOLIT', DOLIT
    PUSH BC	                        ; 11t
    EX	DE,HL	                    ; 4t
    LD	C,(HL)	                    ; 7t
    INC	HL	                        ; 6t
    LD	B,(HL)	                    ; 7t
    INC	HL	                        ; 6t
    mNEXTHL

;   doVAR       ( -- a )
;   Run time routine for VARIABLE and CREATE.
hCOLON  COMPO+5, 'doVAR', DoVAR
    DW  RFROM,EXIT

;   UP          ( -- a )
;   Pointer to the user area.
hCOLON  2, 'UP', UP
    DW  DoVAR
    DW  UPP

;   doUSER      ( -- a )
;   Run time routine for user variables.
hCOLON  COMPO+6,'doUSER',DOUSE
    DW  RFROM, AT, UP, AT, PLUS, EXIT
    
;   do$         ( -- a )
;               Return the address of a compiled string.
hCOLON  COMPO+3,'do$',DOSTR
    DW  RFROM,RAT,RFROM,COUNT,PLUS
    DW  ALGND,TOR,SWAP,TOR,EXIT

;   EXIT	( -- ) ( R: nest-sys -- )	\ CORE
;	Return control to the calling definition.
mCODE	COMPO+4, 'EXIT', EXIT
	LD	L,(IX+0)
	INC	IX
	LD	H,(IX+0)
	INC	IX
    mNEXTHL
    
;   next        ( -- )
;               Run time code for the single index loop.
;               : next ( -- ) \ hilevel model
;                 r> r> dup if 1 - >r @ >r exit then drop cell+ >r ;
mCODE   COMPO+4,'next',DONXT
    PUSH IX
    POP HL                              ; load rp into HL
    LD  A, (HL)                         ; a = low byte of r@
    OR  A        
    JR  NZ, DECLOW                      ; low > 0 goto dec low
    INC HL                              
    LD  A, (HL)                         ; a = high byte of r@
    OR  A        
    JR  NZ, DECHILO                     ; high > 0 goto dec hi dec lo
    INC HL                              
    PUSH HL                             
    POP IX                              ; pop r@
    INC DE                              ; IP = skip following word 
    INC DE       
    mNEXT                               ; continue
DECHILO:
    DEC (HL)                            ; dec high byte of r@
    DEC HL       
DECLOW:
    DEC (HL)                            ; dec low byte of r@
    LD  L, E                            ; DE points to location of loop address
    LD  H, D                                
    LD  E, (HL)                         ; DE points to loop address    
    INC HL       
    LD  D, (HL)  
    mNEXT                               ; continue to loop address


