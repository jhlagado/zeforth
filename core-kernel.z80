; HL contains the xt of the word
CALL_FORTH:
	LD	DE,TRETURN_HERE	                
	JP	(HL)	                 
RETURN_HERE:
    RET
TRETURN_HERE:
    DW RETURN_HERE
    
NEXT_STEP:
	LD	E,(HL)	                    ; 7t
	INC	HL	                        ; 6t
	LD	D,(HL)	                    ; 7t
	INC	HL	                        ; 6t
	EX	DE,HL	                    ; 4t
	JP	(HL)	                    ; 4t

hCOLON	2,'HI2x',HI2x
    DW  STOIO
    DW  DOLIT, HELLO
    DW  TYPEZ
    DW  KEY
    DW  EMIT
    DW  DOLIT, HELLO
    DW  TYPEZ
    DW	QUIT
HELLO: .cstr "Hello Forth! \r\n"

;   hi          ( -- )
;               Display the sign-on message of eForth.

hCOLON  2,'hi',HI
    DW      STOIO,CR                ;initialize I/O
    mDSTR   DOTQP,'eForth v'        ;model
    ; DW      BASE,AT,HEX             ;save radix
    ; DW      VERSN,BDIGS,DIG,DIG
    ; DW      DOLIT,'.',HOLD
    ; DW      DIGS,EDIGS,TYPEE        ;format version number
    ; DW      BASE,STORE              ;restore radix
    DW  CR     
HI1:
    DW  KEY
    DW  DUPP, EMIT
    DW  DOLIT, $0D, EQUAL
    ; DW  DROP, DOLIT, 0
    DW  QBRAN, HI1
    DW  DOLIT, HELLO
    DW  TYPEZ
    DW  CR,EXIT     


mCOLON	4,'COLD',COLD
COLD1:          
    DW      DOLIT,UZERO,DOLIT,UPP
    DW      DOLIT,ULAST-UZERO,CMOVE ;initialize user area
    DW      PRESE                   ;initialize stack and TIB
    ; DW      TBOOT,ATEXE             ;application boot
    ; DW      FORTH,CNTXT,AT,DUPP     ;initialize search order
    ; DW      CRRNT,DSTOR,OVERT
    DW      QUIT                    ;start interpretation
    DW      BRAN,COLD1              ;just in case

;   PRESET      ( -- )
;               Reset data stack pointer and the terminal input buffer.
mCOLON  6,'PRESET',PRESE
    DW      SZERO,AT,SPSTO
    DW      DOLIT,TIBB,NTIB,CELLP,STORE,EXIT

mCODE  4, 'QUIT', QUIT
    HALT

;   EXECUTE	( i*x xt -- j*x )		\ CORE
;		Perform the semantics indentified by execution token, xt.
mCODE	7,'EXECUTE', EXECU
	LD	H,B
	LD	L,C
	POP	BC
	JP	(HL)
	
;   0BRAN	( flag -- )
;		BRAN if flag is zero.
hCODE	COMPO+7,'?branch', QBRAN
	LD	A,B	; 4t
	OR	C	; 4t
	POP	BC	;10t
	JP  Z,BRAN ;10/7t a fast dec is ok, only
    INC	DE	; 6t yes,continue past the BRAN offset
	INC	DE	; 6t
	mNEXT

;   BRAN	( -- )
;		BRAN to an inline address.
hCODE	COMPO+6,'branch', BRAN
	LD	A,(DE)	; 7t go back to the loop
	LD	L,A	; 4t
	INC	DE	; 6t
	LD	A,(DE)	; 7t
	LD	H,A	; 4t
	mNEXTHL
	
;   THROW    ( cstr -- )
;   Prints string message and returns TODO: restart Forth interpreter QUIT
mCOLON	5,'THROWX',THROWX
	DW  TYPEZ, EXIT

