hCOLON	4,'KOLD',KOLD
    DW  STOIO
    ; DW	DOLIT, 65, EMIT
    DW  DOLIT, HELLO, COUNT, TYPEE
    DW	QUIT
HELLO: .pstr "Hello Forth! \r\n"

SVEC:       
    POP HL      ; get return address 
    PUSH DE
    LD A,L      ; sub 3
    SUB 3
    RR A        ; div by 8 / 2 for word offser
    RR A
    LD D,0
    LD E,A
SVEC1:
    LD HL, VECTAB
    ADD HL,DE
    LD E,(HL)
    INC HL
    LD D,(HL)
    EX DE,HL
    POP DE
    JP (HL)

NEXT_STEP:
	LD	E,(HL)	                    ; 7t
	INC	HL	                        ; 6t
	LD	D,(HL)	                    ; 7t
	INC	HL	                        ; 6t
	EX	DE,HL	                    ; 4t
	JP	(HL)	                    ; 4t

mCOLON	4,'COLD',COLD
COLD1:          
    DW      DOLIT,UZERO,DOLIT,UPP
    DW      DOLIT,ULAST-UZERO,CMOVE ;initialize user area
    DW      PRESE                   ;initialize stack and TIB
    ; DW      TBOOT,ATEXE             ;application boot
    ; DW      FORTH,CNTXT,AT,DUPP     ;initialize search order
    ; DW      CRRNT,DSTOR,OVERT
    DW      QUIT                    ;start interpretation
    DW      BRAN,COLD1              ;just in case

;   PRESET      ( -- )
;               Reset data stack pointer and the terminal input buffer.
mCOLON  6,'PRESET',PRESE
    DW      SZERO,AT,SPSTO
    DW      DOLIT,TIBB,NTIB,CELLP,STORE,EXIT

mCODE  4, 'QUIT', QUIT
    HALT

;   EXECUTE	( i*x xt -- j*x )		\ CORE
;		Perform the semantics indentified by execution token, xt.
mCODE	7,'EXECUTE', EXECU
	LD	H,B
	LD	L,C
	POP	BC
	JP	(HL)
	
;   0BRAN	( flag -- )
;		BRAN if flag is zero.
hCODE	COMPO+7,'?branch', QBRAN
	LD	A,B	; 4t
	OR	C	; 4t
	POP	BC	;10t
	JP  Z,BRAN ;10/7t a fast dec is ok, only
    INC	DE	; 6t yes,continue past the BRAN offset
	INC	DE	; 6t
	mNEXT

;   BRAN	( -- )
;		BRAN to an inline address.
hCODE	COMPO+6,'branch', BRAN
	LD	A,(DE)	; 7t go back to the loop
	LD	L,A	; 4t
	INC	DE	; 6t
	LD	A,(DE)	; 7t
	LD	H,A	; 4t
	mNEXTHL
	
;   THROW    ( cstr -- )
;   Prints string message and returns TODO: restart Forth interpreter QUIT
mCOLON	5,'THROWX',THROWX
	DW  TYPESZ, EXIT

