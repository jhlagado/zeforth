;   FOR         ( -- a )
;               Start a FOR-NEXT loop structure in a colon definition.
mCOLON  IMEDD+3,'FOR',FOR
    DW      COMPI,TOR,HERE,EXIT

;   BEGIN       ( -- a )
;               Start an infinite or indefinite loop structure.
mCOLON  IMEDD+5,'BEGIN',BEGIN
    DW      HERE,EXIT

;   NEXT        ( a -- )
;               Terminate a FOR-NEXT loop structure.
mCOLON  IMEDD+4,'NEXT',NEXT
    DW      COMPI,DONXT,COMMA,EXIT

;   UNTIL       ( a -- )
;               Terminate a BEGIN-UNTIL indefinite loop structure.
mCOLON  IMEDD+5,'UNTIL',UNTIL
    DW      COMPI,QBRAN,COMMA,EXIT

;   AGAIN       ( a -- )
;               Terminate a BEGIN-AGAIN infinite loop structure.
mCOLON  IMEDD+5,'AGAIN',AGAIN
    DW      COMPI,BRAN,COMMA,EXIT


;   IF          ( -- A )
;               Begin a conditional branch structure.
mCOLON  IMEDD+2,'IF',IFF
    DW      COMPI,QBRAN,HERE
    DW      DOLIT,0,COMMA,EXIT


;   AHEAD       ( -- A )
;               Compile a forward branch instruction.
mCOLON  IMEDD+5,'AHEAD',AHEAD
    DW      COMPI,BRAN,HERE,DOLIT,0,COMMA,EXIT


;   REPEAT      ( A a -- )
;               Terminate a BEGIN-WHILE-REPEAT indefinite loop.
mCOLON  IMEDD+6,'REPEAT',REPEA
    DW      AGAIN,HERE,SWAP,STORE,EXIT

;   THEN        ( A -- )
;               Terminate a conditional branch structure.
mCOLON  IMEDD+4,'THEN',THENN
    DW      HERE,SWAP,STORE,EXIT

;   AFT         ( a -- a A )
;               Jump to THEN in a FOR-AFT-THEN-NEXT loop the 1st time through.

mCOLON  IMEDD+3,'AFT',AFT
    DW      DROP,AHEAD,BEGIN,SWAP,EXIT

;   ELSE        ( A -- A )
;               Start the false clause in an IF-ELSE-THEN structure.
mCOLON  IMEDD+4,'ELSE',ELSEE
    DW      AHEAD,SWAP,THENN,EXIT

;   WHILE       ( a -- A a )
;               Conditional branch out of a BEGIN-WHILE-REPEAT loop.
mCOLON  IMEDD+5,'WHILE',WHILE
    DW      IFF,SWAP,EXIT

;   ABORT"      ( -- ; <string> )
;               Conditional abort with an error message.
mCOLON  IMEDD+6,'ABORTQ',ABRTQ
    DW      COMPI,ABORQ,STRCQ,EXIT

;   $"          ( -- ; <string> )
;               Compile an inline string literal.
hCOLON  IMEDD+2,'$|',STRQ
    DW      COMPI,STRQP,STRCQ,EXIT

;   ."          ( -- ; <string> )
;               Compile an inline string literal to be typed out at run time.
hCOLON  IMEDD+2,'.|',DOTQ
    DW      COMPI,DOTQP,STRCQ,EXIT

; ;   UNLOOP	( -- ) ( R: loop-sys -- )	\ CORE
; ;		Discard loop-control parameters for the current nesting level.
; ;		An UNLOOP is required for each nesting level before the
; ;		definition may be EXITed.
; mCOLON	COMPO+6,'UNLOOP',UNLOOP
; 	DW	RFrom,RFrom,RFrom,DDROP,ToR,EXIT

